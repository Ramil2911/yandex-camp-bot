version: '3.8'

services:
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app:/app/common
      - TELEGRAM_TOKEN=${TG_BOT_TOKEN}
      - SECURITY_SERVICE_URL=http://security-service:8001
      - RAG_SERVICE_URL=http://rag-service:8002
      - DIALOGUE_SERVICE_URL=http://dialogue-service:8003
      - MONITORING_SERVICE_URL=http://monitoring-service:8004
    depends_on:
      - security-service
      - rag-service
      - dialogue-service
      - monitoring-service
    networks:
      - yandex-camp-network

  security-service:
    build:
      context: .
      dockerfile: security-service/Dockerfile
    ports:
      - "8001:8001"
    environment:
      - PYTHONPATH=/app:/app/common
      - YC_OPENAI_TOKEN=${YC_OPENAI_TOKEN}
      - YC_FOLDER_ID=${YC_FOLDER_ID}
      - MONITORING_SERVICE_URL=http://monitoring-service:8004
    networks:
      - yandex-camp-network

  rag-service:
    build:
      context: .
      dockerfile: rag-service/Dockerfile
    ports:
      - "8002:8002"
    volumes:
      - ./data:/app/data:ro
      - chroma-data:/app/chroma_db
    environment:
      - PYTHONPATH=/app:/app/common
      - MONITORING_SERVICE_URL=http://monitoring-service:8004
    networks:
      - yandex-camp-network

  dialogue-service:
    build:
      context: .
      dockerfile: dialogue-service/Dockerfile
    ports:
      - "8003:8003"
    environment:
      - PYTHONPATH=/app:/app/common
      - YC_OPENAI_TOKEN=${YC_OPENAI_TOKEN}
      - YC_FOLDER_ID=${YC_FOLDER_ID}
      - RAG_SERVICE_URL=http://rag-service:8002
      - MONITORING_SERVICE_URL=http://monitoring-service:8004
    networks:
      - yandex-camp-network

  monitoring-service:
    build:
      context: .
      dockerfile: monitoring-service/Dockerfile
    ports:
      - "8004:8004"
    environment:
      - PYTHONPATH=/app:/app/common
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - db
    networks:
      - yandex-camp-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - yandex-camp-network

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - yandex-camp-network

networks:
  yandex-camp-network:
    driver: bridge

volumes:
  chroma-data:
  postgres-data:
